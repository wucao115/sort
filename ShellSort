#include<iostream> 
#include<vector>

using namespace std;

class ShellSort {
public:
    ShellSort(vector<int>&& nums) :m_vec(nums) {}
    ShellSort(vector<int>& nums) :m_vec(nums) {}
    vector<int>& sort() {
        int n = m_vec.size();
        int gap = n;
        do {
            gap = gap / 30 + 1 ; //+1 避免间隙 跳过为1的状态。
            for (int i = gap; i < m_vec.size(); i = i+gap) {
                int temp = m_vec[i];
                int current = i - gap;
                while (current >= 0 && m_vec[current] > temp) {
                    m_vec[current + gap] = m_vec[current];
                    current = current - gap;
                }
                m_vec[current + gap] = temp;
            }
        } while (gap > 1);

        return m_vec;
    }
private:
    vector<int> m_vec;
};

int main()
{
    ShellSort a(vector<int>{1, 4, 2, 3,9,6,10,24,11,21,20,16});
    a.sort();
}
